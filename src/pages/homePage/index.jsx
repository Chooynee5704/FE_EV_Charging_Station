import { useEffect, useRef, useState } from "react";
import { Link } from "react-router-dom";
import ChargingMap from "../../components/ChargingMap";
// import Layout from "../../components/layout";
import "./index.scss";

const features = [
  {
    icon: "üó∫Ô∏è",
    title: "T√¨m ki·∫øm tr·ª• s·∫°c g·∫ßn b·∫°n",
    description:
      "D·ªÖ d√†ng t√¨m ki·∫øm c√°c tr·ª• s·∫°c xe ƒëi·ªán g·∫ßn nh·∫•t v·ªõi v·ªã tr√≠ hi·ªán t·∫°i c·ªßa b·∫°n tr√™n b·∫£n ƒë·ªì",
  },
  {
    icon: "‚ö°",
    title: "Th√¥ng tin chi ti·∫øt tr·ª• s·∫°c",
    description:
      "Xem th√¥ng tin ƒë·∫ßy ƒë·ªß v·ªÅ lo·∫°i s·∫°c, c√¥ng su·∫•t, gi√° c·∫£ v√† t√¨nh tr·∫°ng ho·∫°t ƒë·ªông",
  },
  {
    icon: "üì±",
    title: "ƒê·∫∑t ch·ªó tr∆∞·ªõc",
    description:
      "ƒê·∫∑t tr∆∞·ªõc ch·ªó s·∫°c ƒë·ªÉ ƒë·∫£m b·∫£o c√≥ s·∫µn khi b·∫°n ƒë·∫øn, ti·∫øt ki·ªám th·ªùi gian ch·ªù ƒë·ª£i",
  },
  {
    icon: "üí≥",
    title: "Thanh to√°n ti·ªán l·ª£i",
    description:
      "Thanh to√°n d·ªÖ d√†ng qua v√≠ ƒëi·ªán t·ª≠, th·∫ª ng√¢n h√†ng ho·∫∑c QR code ngay tr√™n ·ª©ng d·ª•ng",
  },
  {
    icon: "üìä",
    title: "Theo d√µi qu√° tr√¨nh s·∫°c",
    description:
      "Gi√°m s√°t th·ªùi gian s·∫°c, m·ª©c pin hi·ªán t·∫°i v√† chi ph√≠ trong th·ªùi gian th·ª±c",
  },
  {
    icon: "üîî",
    title: "Th√¥ng b√°o th√¥ng minh",
    description:
      "Nh·∫≠n th√¥ng b√°o khi s·∫°c ho√†n t·∫•t, c·∫£nh b√°o khi tr·ª• s·∫°c g·∫∑p s·ª± c·ªë",
  },
];

const statistics = [
  { number: "500+", label: "Tr·ª• s·∫°c kh·∫£ d·ª•ng" },
  { number: "50,000+", label: "Ng∆∞·ªùi d√πng tin t∆∞·ªüng" },
  { number: "99.5%", label: "ƒê·ªô tin c·∫≠y" },
  { number: "24/7", label: "H·ªó tr·ª£ kh√°ch h√†ng" },
];

// D·ªØ li·ªáu tr·∫°m s·∫°c cho map th·∫≠t (format t∆∞∆°ng th√≠ch v·ªõi ChargingMap)
const mapStations = [
  { id: 1, name: "Tr·∫°m s·∫°c Vincom ƒê·ªìng Kh·ªüi", speed: "50 kW", price: "3.500 ƒë/kWh", coords: [10.7769, 106.7009], type: "DC" },
  { id: 2, name: "Tr·∫°m s·∫°c Landmark 81", speed: "150 kW", price: "4.000 ƒë/kWh", coords: [10.7944, 106.7219], type: "DC" },
  { id: 3, name: "Tr·∫°m s·∫°c Crescent Mall", speed: "50 kW", price: "3.200 ƒë/kWh", coords: [10.7374, 106.7223], type: "DC" },
  { id: 4, name: "Tr·∫°m s·∫°c AEON B√¨nh T√¢n", speed: "22 kW", price: "2.800 ƒë/kWh", coords: [10.7500, 106.6000], type: "AC" },
  { id: 5, name: "Tr·∫°m s·∫°c GIGAMALL", speed: "50 kW", price: "3.300 ƒë/kWh", coords: [10.8500, 106.7500], type: "DC" },
];

const chargingStations = [
  {
    id: 1,
    name: "Tr·∫°m s·∫°c Vincom ƒê·ªìng Kh·ªüi",
    address: "72 L√™ Th√°nh T√¥n, Q1, TP.HCM",
    status: "available",
    type: "fast",
    price: "3,500 VNƒê/kWh",
  },
  {
    id: 2,
    name: "Tr·∫°m s·∫°c Landmark 81",
    address: "720A ƒêi·ªán Bi√™n Ph·ªß, B√¨nh Th·∫°nh, TP.HCM",
    status: "busy",
    type: "ultra-fast",
    price: "4,000 VNƒê/kWh",
  },
  {
    id: 3,
    name: "Tr·∫°m s·∫°c Crescent Mall",
    address: "101 T√¥n D·∫≠t Ti√™n, Q7, TP.HCM",
    status: "available",
    type: "fast",
    price: "3,200 VNƒê/kWh",
  },
  {
    id: 4,
    name: "Tr·∫°m s·∫°c AEON B√¨nh T√¢n",
    address: "1 ƒê∆∞·ªùng s·ªë 17A, B√¨nh T√¢n, TP.HCM",
    status: "maintenance",
    type: "normal",
    price: "2,800 VNƒê/kWh",
  },
  {
    id: 5,
    name: "Tr·∫°m s·∫°c GIGAMALL",
    address: "240-242 Ph·∫°m VƒÉn ƒê·ªìng, Th·ªß ƒê·ª©c, TP.HCM",
    status: "available",
    type: "fast",
    price: "3,300 VNƒê/kWh",
  },
];

const HomePage = () => {
  const featuresRef = useRef(null);
  const statsRef = useRef(null);
  const stepsRef = useRef(null);

  // Highlight a station when a marker is clicked and scroll it into view
  const [selectedId, setSelectedId] = useState(null);
  const itemRefs = useRef({});

  const handleMarkerClick = (id) => {
    setSelectedId(id);
    requestAnimationFrame(() => {
      itemRefs.current[id]?.scrollIntoView({
        behavior: "smooth",
        block: "center",
      });
    });
  };

  // N√∫t ƒë·∫∑t ch·ªó s·∫Ω d·∫´n th·∫≥ng ƒë·∫øn trang booking (kh√¥ng check login)

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-in");
          }
        });
      },
      window.scrollTo(0, 0),
      { threshold: 0.1 }
    );

    if (featuresRef.current) observer.observe(featuresRef.current);
    if (statsRef.current) observer.observe(statsRef.current);
    if (stepsRef.current) observer.observe(stepsRef.current);

    return () => observer.disconnect();
  }, []);

  return (
    <div className="homepage">
      <main className="homepage__main">
        {/* Hero Section */}
        <section className="homepage__hero">
          <div className="homepage__hero-content">
            <h1>T√¨m tr·ª• s·∫°c xe ƒëi·ªán d·ªÖ d√†ng, s·∫°c nhanh ch√≥ng</h1>
            <p>
              ·ª®ng d·ª•ng t√¨m ki·∫øm v√† s·ª≠ d·ª•ng tr·ª• s·∫°c xe ƒëi·ªán h√†ng ƒë·∫ßu Vi·ªát Nam.
              H∆°n 500 tr·ª• s·∫°c tr√™n to√†n qu·ªëc, ƒë·∫∑t ch·ªó tr∆∞·ªõc, thanh to√°n ti·ªán
              l·ª£i.
            </p>
            <div className="homepage__hero-actions">
              <button className="btn btn--primary">T√¨m tr·ª• s·∫°c ngay</button>
              <button className="btn btn--secondary">T·∫£i ·ª©ng d·ª•ng</button>
            </div>
          </div>
          <div className="homepage__hero-image">
            <div className="hero-visual">
              <div className="charging-station">üöó</div>
              <div className="dashboard">‚ö°</div>
              <div className="mobile-app">üì±</div>
            </div>
          </div>
        </section>

        {/* Quick Search */}
        <section className="homepage__search">
          <div className="search-container">
            <h2>T√¨m tr·ª• s·∫°c g·∫ßn b·∫°n</h2>
            <div className="search-box">
              <input
                type="text"
                placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ ho·∫∑c t√™n ƒë·ªãa ƒëi·ªÉm..."
              />
              <button className="search-btn">T√¨m ki·∫øm</button>
            </div>
            <div className="quick-filters">
              <button className="filter-btn active">T·∫•t c·∫£</button>
              <button className="filter-btn">S·∫°c nhanh</button>
              <button className="filter-btn">S·∫°c si√™u t·ªëc</button>
              <button className="filter-btn">Mi·ªÖn ph√≠</button>
            </div>
          </div>
        </section>

        {/* Statistics */}
        <section className="homepage__stats" ref={statsRef}>
          {statistics.map((stat, idx) => (
            <div key={idx} className="stat-item">
              <div className="stat-number">{stat.number}</div>
              <div className="stat-label">{stat.label}</div>
            </div>
          ))}
        </section>

        {/* Map Section */}
        <section className="homepage__map">
          <div className="section-header">
            <h2>B·∫£n ƒë·ªì tr·ª• s·∫°c</h2>
            <p>T√¨m ki·∫øm v√† xem th√¥ng tin chi ti·∫øt c√°c tr·ª• s·∫°c g·∫ßn b·∫°n</p>
          </div>
          <div className="map-container">
            <div className="map-view">
              <ChargingMap
                stations={mapStations}
                center={[10.7769, 106.7009]}
                zoom={12}
                onSelect={(station) => handleMarkerClick(station.id)}
                selectedStation={selectedId ? mapStations.find(s => s.id === selectedId) : null}
              />
            </div>
            <div className="station-list">
              <h3>Tr·ª• s·∫°c g·∫ßn b·∫°n</h3>
              <div className="station-scroll">
                {chargingStations.map((station) => (
                  <div
                    key={station.id}
                    ref={(el) => (itemRefs.current[station.id] = el)}
                    className={`station-item ${selectedId === station.id ? "is-selected" : ""
                      }`}
                    role="button"
                    tabIndex={0}
                    onClick={() => setSelectedId(station.id)}
                    onKeyDown={(e) => {
                      if (e.key === "Enter" || e.key === " ")
                        setSelectedId(station.id);
                    }}
                    aria-selected={selectedId === station.id}
                  >
                    <div className="station-header">
                      <h4>{station.name}</h4>
                      <div
                        className={`station-status status-${station.status}`}
                      >
                        {station.status === "available" && "S·∫µn s√†ng"}
                        {station.status === "busy" && "ƒêang s·ª≠ d·ª•ng"}
                        {station.status === "maintenance" && "B·∫£o tr√¨"}
                      </div>
                    </div>
                    <p className="station-address">{station.address}</p>
                    <div className="station-details">
                      <div className="station-type">
                        {station.type === "ultra-fast" &&
                          "‚ö° S·∫°c si√™u t·ªëc (150kW)"}
                        {station.type === "fast" && "‚ö° S·∫°c nhanh (50kW)"}
                        {station.type === "normal" && "üîå S·∫°c th∆∞·ªùng (22kW)"}
                      </div>
                      <div className="station-price">{station.price}</div>
                    </div>
                    <div className="station-actions">
                      <Link to="/charging-stations">
                        <button className="btn-small btn-primary">ƒê·∫∑t ch·ªó</button>
                      </Link>
                      <button className="btn-small btn-secondary">Chi ti·∫øt</button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Features */}
        <section className="homepage__features" ref={featuresRef}>
          <div className="section-header">
            <h2>T√≠nh nƒÉng n·ªïi b·∫≠t</h2>
            <p>Nh·ªØng t√≠nh nƒÉng gi√∫p b·∫°n s·∫°c xe ƒëi·ªán thu·∫≠n ti·ªán v√† ti·∫øt ki·ªám</p>
          </div>
          <div className="features-grid">
            {features.map((feature, idx) => (
              <div key={idx} className="feature-card">
                <div className="feature-icon">{feature.icon}</div>
                <h3>{feature.title}</h3>
                <p>{feature.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* How to use */}
        <section className="homepage__howto" ref={stepsRef}>
          <div className="section-header">
            <h2>C√°ch s·ª≠ d·ª•ng ƒë∆°n gi·∫£n</h2>
            <p>Ch·ªâ v·ªõi 4 b∆∞·ªõc ƒë∆°n gi·∫£n ƒë·ªÉ s·∫°c xe ƒëi·ªán</p>
          </div>
          <div className="steps-grid">
            <div className="step-item">
              <div className="step-number">1</div>
              <h3>T√¨m tr·ª• s·∫°c</h3>
              <p>S·ª≠ d·ª•ng b·∫£n ƒë·ªì ƒë·ªÉ t√¨m tr·ª• s·∫°c g·∫ßn nh·∫•t</p>
            </div>
            <div className="step-item">
              <div className="step-number">2</div>
              <h3>ƒê·∫∑t ch·ªó</h3>
              <p>ƒê·∫∑t tr∆∞·ªõc ƒë·ªÉ ƒë·∫£m b·∫£o c√≥ ch·ªó s·∫°c khi ƒë·∫øn</p>
            </div>
            <div className="step-item">
              <div className="step-number">3</div>
              <h3>Thanh to√°n</h3>
              <p>Thanh to√°n b·∫±ng nhi·ªÅu ph∆∞∆°ng th·ª©c</p>
            </div>
            <div className="step-item">
              <div className="step-number">4</div>
              <h3>K·∫øt n·ªëi v√† s·∫°c</h3>
              <p>C·∫Øm s·∫°c v√† theo d√µi qu√° tr√¨nh tr√™n ·ª©ng d·ª•ng</p>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="homepage__cta">
          <h2>B·∫Øt ƒë·∫ßu h√†nh tr√¨nh xe ƒëi·ªán c·ªßa b·∫°n</h2>
          <p>T·∫£i ·ª©ng d·ª•ng ngay ƒë·ªÉ tr·∫£i nghi·ªám s·∫°c xe ƒëi·ªán ti·ªán l·ª£i nh·∫•t</p>
          <div className="cta-buttons">
            <button className="btn btn--primary btn--large">
              T·∫£i cho Android
            </button>
            <button className="btn btn--primary btn--large">T·∫£i cho iOS</button>
          </div>
        </section>
      </main>
    </div>
  );
};

export default HomePage;
