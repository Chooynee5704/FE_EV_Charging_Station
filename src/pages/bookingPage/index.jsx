// src/pages/BookingPage/index.jsx
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import ChargingMap from "../../components/ChargingMap";
import "./index.scss";

const stations = [
  { id: 1, name: "Tr·∫°m AC 1 ‚Äì NVHSV", speed: "7 kW", price: "3.500 ƒë/kWh", coords: [10.939, 106.813], type: "AC" },
  { id: 2, name: "Tr·∫°m AC 2 ‚Äì C·ªïng ch√≠nh", speed: "7 kW", price: "3.500 ƒë/kWh", coords: [10.940, 106.815], type: "AC" },
  { id: 3, name: "Tr·∫°m AC 3 ‚Äì KTX", speed: "7 kW", price: "3.500 ƒë/kWh", coords: [10.9385, 106.8115], type: "AC" },
  { id: 4, name: "Tr·∫°m DC 1 ‚Äì Nh√† thi ƒë·∫•u", speed: "60 kW", price: "5.000 ƒë/kWh", coords: [10.9395, 106.816], type: "DC" },
  { id: 5, name: "Tr·∫°m DC 2 ‚Äì C√¥ng vi√™n", speed: "60 kW", price: "5.000 ƒë/kWh", coords: [10.9378, 106.814], type: "DC" },
  { id: 6, name: "Tr·∫°m DC 3 ‚Äì B√£i xe sau", speed: "60 kW", price: "5.000 ƒë/kWh", coords: [10.941, 106.812], type: "DC" },
];

export default function BookingPage() {
  const navigate = useNavigate();

  // m·∫∑c ƒë·ªãnh: ng√†y/gi·ªù hi·ªán t·∫°i
  const today = new Date();
  const defaultDate = today.toISOString().split("T")[0];
  const defaultTime = today.toTimeString().slice(0, 5);

  const [selectedStation, setSelectedStation] = useState(null);
  const [searchTerm, setSearchTerm] = useState("");
  const [filterType, setFilterType] = useState("all");
  const [formData, setFormData] = useState({
    date: defaultDate,
    startTime: defaultTime,
  });

  // l·ªçc tr·∫°m s·∫°c
  const filteredStations = stations.filter(station => {
    const matchesSearch = station.name.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesType = filterType === "all" || station.type === filterType;
    return matchesSearch && matchesType;
  });

  // khi nh·∫≠p input
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // khi ch·ªçn tr·∫°m t·ª´ danh s√°ch
  const handleStationSelect = (station) => {
    setSelectedStation(station);
  };

  // khi b·∫•m n√∫t ƒë·∫∑t ch·ªó
  const handleSubmit = (e) => {
    e.preventDefault();
    if (!selectedStation) {
      alert("‚ö†Ô∏è Vui l√≤ng ch·ªçn m·ªôt tr·∫°m tr√™n b·∫£n ƒë·ªì!");
      return;
    }
    // chuy·ªÉn sang trang payment, truy·ªÅn state
    navigate("/payment", { state: { station: selectedStation, formData } });
  };

  return (
    <div className="booking-wrapper">
      <div className="booking-container">
        {/* Form b√™n tr√°i */}
        <div className="left-panel">
          <h1>ƒêƒÉng k√Ω s·∫°c</h1>

          {selectedStation ? (
            <form className="booking-form" onSubmit={handleSubmit}>
              <div className="station-info">
                <p><b>Tr·∫°m:</b> {selectedStation.name}</p>
                <p><b>C√¥ng su·∫•t:</b> {selectedStation.speed}</p>
                <p><b>Gi√°:</b> {selectedStation.price}</p>
              </div>

              <label>
                Ng√†y s·∫°c:
                <input
                  type="date"
                  name="date"
                  value={formData.date}
                  onChange={handleChange}
                  required
                />
              </label>

              <label>
                Gi·ªù b·∫Øt ƒë·∫ßu:
                <input
                  type="time"
                  name="startTime"
                  value={formData.startTime}
                  onChange={handleChange}
                  required
                />
              </label>

              <button type="submit" className="book-btn">
                ƒê·∫∑t ch·ªó & Thanh to√°n
              </button>

              <button
                type="button"
                className="change-station-btn"
                onClick={() => setSelectedStation(null)}
              >
                üîÑ Ch·ªçn tr·∫°m kh√°c
              </button>
            </form>
          ) : (
            <div className="station-selection">
              <p className="hint">üîç Ch·ªçn m·ªôt tr·∫°m s·∫°c ƒë·ªÉ ƒë·∫∑t ch·ªó</p>

              {/* T√¨m ki·∫øm v√† l·ªçc */}
              <div className="search-filters">
                <input
                  type="text"
                  placeholder="T√¨m ki·∫øm tr·∫°m s·∫°c..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="search-input"
                />

                <select
                  value={filterType}
                  onChange={(e) => setFilterType(e.target.value)}
                  className="filter-select"
                >
                  <option value="all">T·∫•t c·∫£ lo·∫°i</option>
                  <option value="AC">AC (S·∫°c ch·∫≠m)</option>
                  <option value="DC">DC (S·∫°c nhanh)</option>
                </select>
              </div>

              {/* Danh s√°ch tr·∫°m s·∫°c */}
              <div className="stations-list">
                {filteredStations.map((station) => (
                  <div
                    key={station.id}
                    className={`station-card ${station.type.toLowerCase()}`}
                    onClick={() => handleStationSelect(station)}
                  >
                    <div className="station-header">
                      <h3>{station.name}</h3>
                      <span className={`station-type ${station.type.toLowerCase()}`}>
                        {station.type}
                      </span>
                    </div>
                    <div className="station-details">
                      <p>‚ö° {station.speed}</p>
                      <p>üí∞ {station.price}</p>
                    </div>
                  </div>
                ))}
              </div>

              {filteredStations.length === 0 && (
                <p className="no-results">Kh√¥ng t√¨m th·∫•y tr·∫°m s·∫°c n√†o</p>
              )}
            </div>
          )}
        </div>

        {/* Map b√™n ph·∫£i */}
        <div className="right-panel">
          <ChargingMap
            stations={stations}
            center={[10.939, 106.813]}
            zoom={15}
            onSelect={setSelectedStation}
            selectedStation={selectedStation}
          />
        </div>
      </div>
    </div>
  );
}
