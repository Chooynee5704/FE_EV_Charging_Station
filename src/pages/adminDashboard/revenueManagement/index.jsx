import { useState } from "react";
import "./index.scss";

const RevenueManagement = () => {
  const [timeFilter, setTimeFilter] = useState("30days");

  // Mock revenue data
  const revenueStats = [
    {
      title: "Doanh thu h√¥m nay",
      value: "‚Ç´2,450,000",
      change: "+15.2%",
      changeType: "increase",
      icon: "üí∞",
      comparison: "so v·ªõi h√¥m qua",
    },
    {
      title: "Doanh thu th√°ng n√†y",
      value: "‚Ç´68,200,000",
      change: "+8.7%",
      changeType: "increase",
      icon: "üìà",
      comparison: "so v·ªõi th√°ng tr∆∞·ªõc",
    },
    {
      title: "Trung b√¨nh/ng√†y",
      value: "‚Ç´2,100,000",
      change: "-2.1%",
      changeType: "decrease",
      icon: "üìä",
      comparison: "so v·ªõi th√°ng tr∆∞·ªõc",
    },
    {
      title: "M·ª•c ti√™u th√°ng",
      value: "85%",
      change: "‚Ç´58M/‚Ç´70M",
      changeType: "increase",
      icon: "üéØ",
      comparison: "ho√†n th√†nh",
    },
  ];

  // Mock station revenue data
  const stationRevenue = [
    {
      id: 1,
      name: "Vincom ƒê·ªìng Kh·ªüi",
      revenue: 450000,
      percentage: 85,
      growth: 12.5,
    },
    {
      id: 2,
      name: "Landmark 81",
      revenue: 380000,
      percentage: 72,
      growth: 8.3,
    },
    {
      id: 3,
      name: "Crescent Mall",
      revenue: 320000,
      percentage: 60,
      growth: -2.1,
    },
    {
      id: 4,
      name: "AEON B√¨nh T√¢n",
      revenue: 290000,
      percentage: 55,
      growth: 15.7,
    },
    { id: 5, name: "GIGAMALL", revenue: 270000, percentage: 51, growth: 5.4 },
  ];

  // Mock transaction data
  const recentTransactions = [
    {
      id: 1,
      user: "Nguy·ªÖn VƒÉn A",
      station: "Vincom ƒê·ªìng Kh·ªüi",
      amount: 45000,
      date: "2024-12-22 14:30",
      status: "completed",
    },
    {
      id: 2,
      user: "Tr·∫ßn Th·ªã B",
      station: "Landmark 81",
      amount: 67500,
      date: "2024-12-22 13:15",
      status: "completed",
    },
    {
      id: 3,
      user: "L√™ VƒÉn C",
      station: "Crescent Mall",
      amount: 32000,
      date: "2024-12-22 12:45",
      status: "pending",
    },
    {
      id: 4,
      user: "Ph·∫°m Th·ªã D",
      station: "AEON B√¨nh T√¢n",
      amount: 28000,
      date: "2024-12-22 11:20",
      status: "completed",
    },
    {
      id: 5,
      user: "Ho√†ng Minh E",
      station: "GIGAMALL",
      amount: 55000,
      date: "2024-12-22 10:30",
      status: "failed",
    },
  ];

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(amount);
  };

  return (
    <div className="revenue-management">
      {/* Header */}
      <div className="page-header">
        <div className="header-content">
          <h2>B√°o c√°o doanh thu</h2>
          <p>Th·ªëng k√™ chi ti·∫øt v·ªÅ doanh thu v√† hi·ªáu qu·∫£ kinh doanh</p>
        </div>
        <div className="header-actions">
          <select
            value={timeFilter}
            onChange={(e) => setTimeFilter(e.target.value)}
            className="time-filter"
          >
            <option value="7days">7 ng√†y qua</option>
            <option value="30days">30 ng√†y qua</option>
            <option value="3months">3 th√°ng qua</option>
            <option value="year">NƒÉm nay</option>
          </select>
          <button className="btn-primary">
            <span>üìä</span> Xu·∫•t b√°o c√°o
          </button>
        </div>
      </div>

      {/* Revenue Cards */}
      <div className="revenue-overview">
        {revenueStats.map((stat, index) => (
          <div key={index} className="revenue-card">
            <div className="revenue-icon">{stat.icon}</div>
            <div className="revenue-content">
              <h3>{stat.title}</h3>
              <div className="revenue-amount">{stat.value}</div>
              <div className={`revenue-change ${stat.changeType}`}>
                {stat.change} {stat.comparison}
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Charts Section */}
      <div className="charts-grid">
        <div className="chart-card large">
          <div className="card-header">
            <h3>Bi·ªÉu ƒë·ªì doanh thu 30 ng√†y qua</h3>
            <div className="chart-controls">
              <button className="chart-type-btn active">C·ªôt</button>
              <button className="chart-type-btn">ƒê∆∞·ªùng</button>
              <button className="chart-type-btn">V√πng</button>
            </div>
          </div>
          <div className="chart-content">
            <div className="revenue-chart">
              <div className="chart-bars">
                {Array.from({ length: 30 }, (_, i) => (
                  <div
                    key={i}
                    className="revenue-bar"
                    style={{ height: `${Math.random() * 80 + 20}%` }}
                    title={`Ng√†y ${i + 1}: ${formatCurrency(
                      Math.random() * 3000000 + 1000000
                    )}`}
                  ></div>
                ))}
              </div>
            </div>
          </div>
        </div>

        <div className="chart-card">
          <div className="card-header">
            <h3>Doanh thu theo tr·∫°m</h3>
          </div>
          <div className="chart-content">
            <div className="station-revenue-list">
              {stationRevenue.map((station) => (
                <div key={station.id} className="station-revenue-item">
                  <div className="station-info">
                    <span className="station-name">{station.name}</span>
                    <div className="progress-bar">
                      <div
                        className="progress-fill"
                        style={{ width: `${station.percentage}%` }}
                      ></div>
                    </div>
                  </div>
                  <div className="revenue-details">
                    <span className="revenue-amount">
                      {formatCurrency(station.revenue)}
                    </span>
                    <span
                      className={`growth ${
                        station.growth >= 0 ? "positive" : "negative"
                      }`}
                    >
                      {station.growth >= 0 ? "‚Üó" : "‚Üò"}{" "}
                      {Math.abs(station.growth)}%
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* Recent Transactions */}
      <div className="transactions-section">
        <div className="section-header">
          <h3>Giao d·ªãch g·∫ßn ƒë√¢y</h3>
          <button className="btn-link">Xem t·∫•t c·∫£</button>
        </div>
        <div className="table-container">
          <table className="transactions-table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Ng∆∞·ªùi d√πng</th>
                <th>Tr·∫°m s·∫°c</th>
                <th>S·ªë ti·ªÅn</th>
                <th>Th·ªùi gian</th>
                <th>Tr·∫°ng th√°i</th>
              </tr>
            </thead>
            <tbody>
              {recentTransactions.map((transaction) => (
                <tr key={transaction.id}>
                  <td>#{transaction.id}</td>
                  <td className="user-name">{transaction.user}</td>
                  <td>{transaction.station}</td>
                  <td className="amount">
                    {formatCurrency(transaction.amount)}
                  </td>
                  <td>{transaction.date}</td>
                  <td>
                    <span className={`status-badge ${transaction.status}`}>
                      {transaction.status === "completed" && "‚úÖ Ho√†n th√†nh"}
                      {transaction.status === "pending" && "üü° ƒêang x·ª≠ l√Ω"}
                      {transaction.status === "failed" && "‚ùå Th·∫•t b·∫°i"}
                    </span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* Detailed Analysis */}
      <div className="analysis-section">
        <div className="analysis-card">
          <div className="card-header">
            <h3>Ph√¢n t√≠ch chi ti·∫øt</h3>
          </div>
          <div className="analysis-grid">
            <div className="analysis-item">
              <div className="analysis-label">Doanh thu cao nh·∫•t</div>
              <div className="analysis-value">‚Ç´2,850,000</div>
              <div className="analysis-date">15/12/2024</div>
            </div>
            <div className="analysis-item">
              <div className="analysis-label">Tr·∫°m hi·ªáu qu·∫£ nh·∫•t</div>
              <div className="analysis-value">Vincom ƒê·ªìng Kh·ªüi</div>
              <div className="analysis-date">‚Ç´15,2K/ng√†y</div>
            </div>
            <div className="analysis-item">
              <div className="analysis-label">Th·ªùi gian cao ƒëi·ªÉm</div>
              <div className="analysis-value">18:00 - 20:00</div>
              <div className="analysis-date">T·ªëi th·ª© 6</div>
            </div>
            <div className="analysis-item">
              <div className="analysis-label">TƒÉng tr∆∞·ªüng th√°ng</div>
              <div className="analysis-value">+12.5%</div>
              <div className="analysis-date">So v·ªõi th√°ng tr∆∞·ªõc</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RevenueManagement;
