import { MapContainer, TileLayer, Marker, Popup, useMap } from "react-leaflet";
import L from "leaflet";
import "leaflet/dist/leaflet.css";
import "./index.scss";
import { Link } from "react-router-dom";

function ChargingStationCard({
  image,
  title,
  sockets,
  power,
  plugTypes,
  installTypes,
  protection,
}) {
  return (
    <div className="card">
      <img src={image} alt={title} />
      <h3>{title}</h3>
      <ul>
        <li>
          <b>C√°ch l·∫Øp ƒë·∫∑t:</b> {installTypes}
        </li>
        <li>
          <b>S·ªë l∆∞·ª£ng c·ªïng:</b> {sockets}
        </li>
        <li>
          <b>C√¥ng su·∫•t:</b> {power}
        </li>
        <li>
          <b>D·∫°ng ·ªï c·∫Øm:</b> {plugTypes}
        </li>
        <li>
          <b>B·∫£o v·ªá:</b> {protection}
        </li>
      </ul>
      <div className="card-actions">
        <button className="btn-detail">Chi ti·∫øt</button>
        <Link to="/booking">
          <button className="btn-rent">ƒê·∫∑t ch·ªó</button>
        </Link>
      </div>
    </div>
  );
}

// Icon cho ng∆∞·ªùi d√πng
const userIcon = new L.Icon({
  iconUrl: "https://cdn-icons-png.flaticon.com/512/64/64113.png",
  iconSize: [40, 40],
  iconAnchor: [20, 40],
});

// Icon cho tr·∫°m AC
const acIcon = new L.Icon({
  iconUrl: "https://cdn-icons-png.flaticon.com/512/833/833314.png",
  iconSize: [35, 35],
  iconAnchor: [17, 35],
});

// Icon cho tr·∫°m DC
const dcIcon = new L.Icon({
  iconUrl: "https://cdn-icons-png.flaticon.com/512/833/833322.png",
  iconSize: [35, 35],
  iconAnchor: [17, 35],
});

const ChangeView = ({ center, zoom }) => {
  const map = useMap();
  map.setView(center, zoom);
  return null;
};

const ChargingMap = ({
  stations,
  center,
  zoom = 13,
  onSelect,
  userLocation,
  onUpdateLocation,
}) => {
  return (
    <MapContainer
      center={center}
      zoom={zoom}
      style={{ height: "100%", width: "100%" }}
    >
      <ChangeView center={center} zoom={zoom} />
      <TileLayer
        attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
      />

      {/* Marker tr·∫°m s·∫°c */}
      {stations.map((station) => (
        <Marker
          key={station.id}
          position={station.coords}
          icon={station.type === "AC" ? acIcon : dcIcon}
          eventHandlers={{
            click: () => onSelect && onSelect(station),
          }}
        >
          <Popup>
            <b>{station.name}</b>
            <br />‚ö° {station.speed}
            <br />
            üí∞ {station.price}
          </Popup>
        </Marker>
      ))}

      {/* Marker ng∆∞·ªùi d√πng */}
      {userLocation && (
        <Marker
          position={userLocation}
          icon={userIcon}
          eventHandlers={{
            click: () => {
              if (onUpdateLocation) onUpdateLocation();
            },
          }}
        >
          <Popup>V·ªã tr√≠ c·ªßa b·∫°n</Popup>
        </Marker>
      )}
    </MapContainer>
  );
};
/* ----- Hero section ----- */
function ChargingStationHero() {
  return (
    <section className="charging-hero">
      <div className="hero-text">
        <h2>B·ªò S·∫†C XE ƒêI·ªÜN </h2>
        <p className="highlight">
          S·∫†C TH√îNG MINH, D·ªÑ D√ÄNG S·ª¨ D·ª§NG, L·∫ÆP ƒê·∫∂T NHANH CH√ìNG !
        </p>
        <p>S·∫¢N PH·∫®M AN TO√ÄN, ƒê·∫†T TI√äU CHU·∫®N OCPP</p>
        <a href="#charging-stations" className="btn">
          Xem chi ti·∫øt s·∫£n ph·∫©m
        </a>
      </div>
      <div className="hero-image">
        <img src={"./src/assets/banner.jpg"} alt="Banner EV Charging" />
      </div>
    </section>
  );
}

/* ----- Title Support ----- */
function TitleSupport() {
  return (
    <section className="intro-banner">
      <h2>Support</h2>
    </section>
  );
}
/* ----- Trang ch√≠nh hi·ªÉn th·ªã danh s√°ch ----- */
function ChargingStationsPage() {
  const stations = [
    {
      image: "./src/assets/sacAC4.jpg",
      title: "Tr·∫°m s·∫°c xe m√°y xoay chi·ªÅu AC 4 c·ªïng",
      sockets: "4 c·ªïng",
      power: "T·ªëi ƒëa 2000W / 1 c·ªïng",
      plugTypes: "2 ch·∫•u / 3 ch·∫•u",
      installTypes: "Tr·ª• ƒë·ª©ng / Treo t∆∞·ªùng",
      protection: "Qu√° nhi·ªát / Qu√° t·∫£i / D√≤ng r√≤ / Ng·∫Øn m·∫°ch",
    },
    {
      image: "./src/assets/AC10.jpg",
      title: "Tr·∫°m s·∫°c xe m√°y xoay chi·ªÅu AC 10 c·ªïng",
      sockets: "10 c·ªïng",
      power: "T·ªëi ƒëa 2000W / 1 c·ªïng",
      plugTypes: "2 ch·∫•u / 3 ch·∫•u",
      installTypes: "T∆∞·ªùng nh√† / Tr·ª•",
      protection: "Qu√° nhi·ªát / Qu√° t·∫£i / D√≤ng r√≤ / Ng·∫Øn m·∫°ch / Ch·ªëng n∆∞·ªõc IP54",
    },
    {
      image: "./src/assets/DC60.jpg",
      title: "Tr·∫°m s·∫°c nhanh DC 60 kW",
      sockets: "3 c·ªïng",
      power: "60 kW",
      plugTypes: "CCS / CHAdeMO",
      installTypes: "Ngo√†i tr·ªùi / Trong nh√†",
      protection: "Qu√° nhi·ªát / Qu√° t·∫£i / D√≤ng r√≤ / Ng·∫Øn m·∫°ch / Ch·ªëng s√©t",
    },
    {
      image: "./src/assets/DC120.jpg",
      title: "Tr·∫°m s·∫°c nhanh DC 120 kW",
      sockets: "3 c·ªïng",
      power: "120 kW",
      plugTypes: "CCS / CHAdeMO",
      installTypes: "Ngo√†i tr·ªùi / Trong nh√†",
      protection:
        "Qu√° nhi·ªát / Qu√° t·∫£i / D√≤ng r√≤ / Ng·∫Øn m·∫°ch / Gi√°m s√°t r√≤ ƒëi·ªán DC",
    },
  ];

  // Kh√¥ng ki·ªÉm tra login, ch·ªâ hi·ªÉn th·ªã danh s√°ch v√† n√∫t ƒëi·ªÅu h∆∞·ªõng sang booking

  return (
    <div>
      {/* Hero gi·ªõi thi·ªáu */}
      <ChargingStationHero />

      <section className="title-support">
        <h2>C√°c lo·∫°i tr·ª• s·∫°c</h2>
      </section>

      {/* Danh s√°ch card */}
      <section id="charging-stations" className="charging-stations">
        {stations.map((s, idx) => (
          <ChargingStationCard key={idx} {...s} />
        ))}
      </section>
    </div>
  );
}

export default ChargingStationsPage;
