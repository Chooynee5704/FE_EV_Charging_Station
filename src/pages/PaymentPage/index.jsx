import { useMemo, useState, useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import "./index.scss";

export default function PaymentPage() {
    useEffect(() => {
        window.scrollTo(0, 0);
    }, []);

    const navigate = useNavigate();
    const { state } = useLocation();
    const station = state?.station || null;
    const charger = state?.charger || null;
    const defaults = state?.formData || {};

    const [energyKwh, setEnergyKwh] = useState(5);
    const [paymentMethod, setPaymentMethod] = useState("e_wallet"); // e_wallet | banking | card | cod
    const [isPaying, setIsPaying] = useState(false);
    const [invoice, setInvoice] = useState(null);

    // L·∫•y gi√° t·ª´ tr·ª• s·∫°c ƒë√£ ch·ªçn
    const pricePerKwh = useMemo(() => {
        if (charger?.price) {
            // Extract s·ªë t·ª´ chu·ªói gi√° (v√≠ d·ª•: "3.500 ƒë/kWh" -> 3500)
            const priceMatch = charger.price.match(/(\d+(?:\.\d+)?)/);
            return priceMatch ? parseFloat(priceMatch[1]) * 1000 : 3500; // Convert to ƒë/kWh
        }
        return 3500; // Default price
    }, [charger]);

    const totalAmount = useMemo(() => {
        return energyKwh * pricePerKwh;
    }, [energyKwh, pricePerKwh]);

    const handleSandboxPay = () => {
        setIsPaying(true);
        setTimeout(() => {
            // Gi·∫£ l·∫≠p thanh to√°n th√†nh c√¥ng
            const code = "INV-" + Math.random().toString(36).slice(2, 8).toUpperCase();
            const now = new Date();
            setInvoice({
                code,
                createdAt: now.toLocaleString(),
                stationName: station?.name || "Kh√¥ng x√°c ƒë·ªãnh",
                chargerName: charger?.name || "Kh√¥ng x√°c ƒë·ªãnh",
                energyKwh,
                pricePerKwh,
                paymentMethod,
                totalAmount,
                date: defaults?.date,
                startTime: defaults?.startTime,
            });
            setIsPaying(false);
        }, 1200);
    };

    const [showInvoice, setShowInvoice] = useState(false);

    return (
        <div className="payment-page">
            <div className="payment-container">
                <div className="left">
                    <h1>Thanh to√°n</h1>

                    <div className="summary-card">
                        <h3>Th√¥ng tin ƒë·∫∑t ch·ªó</h3>
                        <p><b>Tr·∫°m:</b> {station?.name || "‚Äî"}</p>
                        <p><b>Tr·ª• s·∫°c:</b> {charger?.name || "‚Äî"}</p>
                        <p><b>C√¥ng su·∫•t:</b> {charger?.power || "‚Äî"}</p>
                        <p><b>Ng√†y s·∫°c:</b> {defaults?.date || "‚Äî"}</p>
                        <p><b>Gi·ªù b·∫Øt ƒë·∫ßu:</b> {defaults?.startTime || "‚Äî"}</p>
                    </div>

                    <div className="plan-card">
                        <h3>Thanh to√°n theo kWh</h3>
                        <div className="plan-inputs">
                            <label>
                                S·ªë kWh d·ª± ki·∫øn
                                <input
                                    type="number"
                                    min={1}
                                    step={0.5}
                                    value={energyKwh}
                                    onChange={(e) => setEnergyKwh(Number(e.target.value) || 0)}
                                />
                            </label>
                            <p className="price-note">
                                ƒê∆°n gi√°: {pricePerKwh.toLocaleString()} ƒë/kWh
                                <br />
                                <small style={{ color: "#666" }}>
                                    (Gi√° t·ª´ tr·ª• s·∫°c {charger?.name || "ƒë√£ ch·ªçn"})
                                </small>
                            </p>
                        </div>
                    </div>

                    <div className="payment-methods">
                        <h3>Ph∆∞∆°ng th·ª©c thanh to√°n</h3>
                        <div className="methods">
                            <label>
                                <input
                                    type="radio"
                                    name="pm"
                                    value="e_wallet"
                                    checked={paymentMethod === "e_wallet"}
                                    onChange={() => setPaymentMethod("e_wallet")}
                                />
                                V√≠ ƒëi·ªán t·ª≠
                            </label>
                            <label>
                                <input
                                    type="radio"
                                    name="pm"
                                    value="banking"
                                    checked={paymentMethod === "banking"}
                                    onChange={() => setPaymentMethod("banking")}
                                />
                                Banking
                            </label>
                            <label>
                                <input
                                    type="radio"
                                    name="pm"
                                    value="card"
                                    checked={paymentMethod === "card"}
                                    onChange={() => setPaymentMethod("card")}
                                />
                                Th·∫ª
                            </label>
                            <label>
                                <input
                                    type="radio"
                                    name="pm"
                                    value="cod"
                                    checked={paymentMethod === "cod"}
                                    onChange={() => setPaymentMethod("cod")}
                                />
                                Thanh to√°n t·∫°i tr·∫°m
                            </label>
                        </div>
                    </div>
                </div>

                <div className="right">
                    <div className="total-card">
                        <h3>T·∫°m t√≠nh</h3>
                        <div className="row">
                            <span>H√¨nh th·ª©c</span>
                            <span className="value">Theo kWh</span>
                        </div>
                        <div className="row">
                            <span>S·ªë kWh</span>
                            <span className="value">{energyKwh} kWh</span>
                        </div>
                        <div className="row">
                            <span>ƒê∆°n gi√°</span>
                            <span className="value">{pricePerKwh.toLocaleString()} ƒë/kWh</span>
                        </div>
                        <div className="row total-row">
                            <span>Th√†nh ti·ªÅn</span>
                            <span className="value">{totalAmount.toLocaleString()} ƒë</span>
                        </div>
                        <button
                            className="pay-btn"
                            disabled={isPaying}
                            onClick={handleSandboxPay}
                        >
                            {isPaying ? "ƒêang x·ª≠ l√Ω..." : "Thanh to√°n"}
                        </button>
                        <button className="back-btn" onClick={() => navigate(-1)}>Quay l·∫°i</button>
                    </div>

                    {invoice && (
                        <div className="invoice">
                            <h3>H√≥a ƒë∆°n ƒëi·ªán t·ª≠</h3>
                            <p><b>M√£ h√≥a ƒë∆°n:</b> {invoice.code}</p>
                            <p><b>Th·ªùi gian:</b> {invoice.createdAt}</p>
                            <p><b>Tr·∫°m:</b> {invoice.stationName}</p>
                            <p><b>Tr·ª• s·∫°c:</b> {invoice.chargerName}</p>
                            <p><b>H√¨nh th·ª©c:</b> Theo kWh ({invoice.energyKwh} kWh)</p>
                            <p><b>ƒê∆°n gi√°:</b> {invoice.pricePerKwh.toLocaleString()} ƒë/kWh</p>
                            <p><b>Thanh to√°n qua:</b> {paymentMethod}</p>
                            <p className="grand-total"><b>T·ªïng ti·ªÅn:</b> {invoice.totalAmount.toLocaleString()} ƒë</p>
                            <div className="invoice-actions">
                                <button className="print-btn" onClick={() => setShowInvoice(true)}>üñ®Ô∏è In h√≥a ƒë∆°n</button>
                                <button className="close-btn" onClick={() => setInvoice(null)}>‚úñÔ∏è ƒê√≥ng</button>
                            </div>

                        </div>
                    )}
                </div>
            </div>

            {showInvoice && invoice && (
                <div className="invoice-print-container">
                    <div className="invoice-print-content">
                        <div className="invoice-header">
                            <div className="invoice-title">H√ìA ƒê∆†N ƒêI·ªÜN T·ª¨</div>
                            <div className="invoice-code">M√£ h√≥a ƒë∆°n: {invoice.code}</div>
                            <div className="invoice-date">Ng√†y t·∫°o: {invoice.createdAt}</div>
                        </div>

                        <div className="invoice-info">
                            <div className="info-section">
                                <h3>Th√¥ng tin tr·∫°m s·∫°c</h3>
                                <div className="info-item">
                                    <span className="info-label">T√™n tr·∫°m:</span>
                                    <span className="info-value">{invoice.stationName}</span>
                                </div>
                                <div className="info-item">
                                    <span className="info-label">Tr·ª• s·∫°c:</span>
                                    <span className="info-value">{invoice.chargerName}</span>
                                </div>
                                <div className="info-item">
                                    <span className="info-label">Ng√†y s·∫°c:</span>
                                    <span className="info-value">{invoice.date}</span>
                                </div>
                                <div className="info-item">
                                    <span className="info-label">Gi·ªù b·∫Øt ƒë·∫ßu:</span>
                                    <span className="info-value">{invoice.startTime}</span>
                                </div>
                            </div>

                            <div className="info-section">
                                <h3>Chi ti·∫øt thanh to√°n</h3>
                                <div className="info-item">
                                    <span className="info-label">H√¨nh th·ª©c:</span>
                                    <span className="info-value">Theo kWh</span>
                                </div>
                                <div className="info-item">
                                    <span className="info-label">S·ªë kWh:</span>
                                    <span className="info-value">{invoice.energyKwh} kWh</span>
                                </div>
                                <div className="info-item">
                                    <span className="info-label">ƒê∆°n gi√°:</span>
                                    <span className="info-value">{invoice.pricePerKwh.toLocaleString()} ƒë/kWh</span>
                                </div>
                                <div className="info-item">
                                    <span className="info-label">Thanh to√°n qua:</span>
                                    <span className="info-value">{invoice.paymentMethod}</span>
                                </div>
                            </div>
                        </div>

                        <div className="total-section">
                            <div className="total-label">T·ªïng ti·ªÅn</div>
                            <div className="total-amount">{invoice.totalAmount.toLocaleString()} ƒë</div>
                        </div>

                        <div className="invoice-footer">
                            <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• s·∫°c xe ƒëi·ªán!</p>
                            <p>H√≥a ƒë∆°n n√†y ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông b·ªüi h·ªá th·ªëng</p>
                        </div>

                        <div className="invoice-actions no-print">
                            <button className="print-btn" onClick={() => window.print()}>
                                üñ®Ô∏è In h√≥a ƒë∆°n
                            </button>
                            <button className="close-btn" onClick={() => setShowInvoice(false)}>
                                ‚úñÔ∏è ƒê√≥ng
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
}